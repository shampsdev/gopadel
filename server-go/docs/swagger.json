{
    "swagger": "2.0",
    "info": {
        "description": "Manage chats, users",
        "title": "GoPadel server",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/images/upload/avatar": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload file to s3",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A url to the stored image",
                        "schema": {
                            "$ref": "#/definitions/image.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Parsing error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/loyalties": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loyalties"
                ],
                "summary": "Get all loyalty programs",
                "responses": {
                    "200": {
                        "description": "List of loyalty programs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Loyalty"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tournaments/filter": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tournaments"
                ],
                "summary": "Filter tournaments",
                "parameters": [
                    {
                        "description": "Tournament filter",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.FilterTournament"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tournaments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Tournament"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/filter": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Filter users",
                "parameters": [
                    {
                        "description": "User filter",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.FilterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get me",
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create me",
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update current user data",
                "parameters": [
                    {
                        "description": "User update data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PatchUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user data",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/me/bio": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get current user bio",
                "responses": {
                    "200": {
                        "description": "User bio data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "User bio not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{user_id}/tournaments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get tournaments by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tournaments where user participated",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Tournament"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Club": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.FilterTournament": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isAvalible": {
                    "description": "true if tournament is not started and not full",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.FilterUser": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "telegramId": {
                    "type": "integer"
                }
            }
        },
        "domain.Loyalty": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                }
            }
        },
        "domain.PatchUser": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isRegistered": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "padelProfiles": {
                    "type": "string"
                },
                "playingPosition": {
                    "$ref": "#/definitions/domain.PlayingPosition"
                },
                "rank": {
                    "type": "number"
                },
                "telegramUsername": {
                    "type": "string"
                }
            }
        },
        "domain.PlayingPosition": {
            "type": "string",
            "enum": [
                "right",
                "left",
                "both"
            ],
            "x-enum-varnames": [
                "PlayingPositionRight",
                "PlayingPositionLeft",
                "PlayingPositionBoth"
            ]
        },
        "domain.Tournament": {
            "type": "object",
            "properties": {
                "club": {
                    "$ref": "#/definitions/domain.Club"
                },
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maxUsers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organizator": {
                    "$ref": "#/definitions/domain.User"
                },
                "price": {
                    "type": "integer"
                },
                "rankMax": {
                    "type": "number"
                },
                "rankMin": {
                    "type": "number"
                },
                "startTime": {
                    "type": "string"
                },
                "tournamentType": {
                    "type": "string"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isRegistered": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "loyalty": {
                    "$ref": "#/definitions/domain.Loyalty"
                },
                "padelProfiles": {
                    "type": "string"
                },
                "playingPosition": {
                    "$ref": "#/definitions/domain.PlayingPosition"
                },
                "rank": {
                    "type": "number"
                },
                "telegramId": {
                    "type": "integer"
                },
                "telegramUsername": {
                    "type": "string"
                }
            }
        },
        "image.UploadResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Token",
            "in": "header"
        }
    }
}