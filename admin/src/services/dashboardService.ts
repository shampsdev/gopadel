// Dashboard service - mock implementation
// In a real application, this would make API calls to a backend server

interface Stat {
  title: string;
  value: number;
  change: string;
  icon: string;
}

interface QuickAction {
  name: string;
  icon: string;
  color: string;
}

interface ActivityItem {
  action: string;
  details: string;
  time: string;
  icon: string;
}

interface NavigationCard {
  title: string;
  icon: string;
  description: string;
  color: string;
  iconBg: string;
  path: string;
}

export interface DashboardData {
  stats: Stat[];
  quickActions: QuickAction[];
  recentActivity: ActivityItem[];
  navigationCards: NavigationCard[];
}

class DashboardService {
  async getDashboardData(): Promise<DashboardData> {
    // In a real app, this would be an API call
    // Simulating a network request with a delay
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve({
          stats: [
            { title: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value: 1245, change: '+12%', icon: 'üë§' },
            { title: '–¢—É—Ä–Ω–∏—Ä–æ–≤', value: 48, change: '+3', icon: 'üèÜ' },
            { title: '–ú–∞—Ç—á–µ–π', value: 346, change: '+28', icon: 'üèì' },
            { title: '–õ–æ–∫–∞—Ü–∏–π', value: 12, change: '+1', icon: 'üìç' }
          ],
          quickActions: [
            { name: '–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä', icon: '‚ûï', color: 'bg-blue-500' },
            { name: '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', icon: 'üë§', color: 'bg-green-500' },
            { name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç—á–∞–º–∏', icon: 'üèì', color: 'bg-purple-500' },
            { name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã', icon: '‚öôÔ∏è', color: 'bg-gray-500' }
          ],
          recentActivity: [
            { action: '–°–æ–∑–¥–∞–Ω —Ç—É—Ä–Ω–∏—Ä', details: '–ß–µ–º–ø–∏–æ–Ω–∞—Ç –ú–æ—Å–∫–≤—ã 2023', time: '10 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥', icon: 'üèÜ' },
            { action: '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', details: '–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞—Å—å', time: '25 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥', icon: 'üë§' },
            { action: '–ó–∞–≤–µ—Ä—à–µ–Ω –º–∞—Ç—á', details: '–ö–æ–º–∞–Ω–¥–∞ –ê vs –ö–æ–º–∞–Ω–¥–∞ –ë (3-1)', time: '1 —á–∞—Å –Ω–∞–∑–∞–¥', icon: 'üèì' },
            { action: '–û–±–Ω–æ–≤–ª–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏—è', details: 'GO PADEL –¶–µ–Ω—Ç—Ä - –∏–∑–º–µ–Ω–µ–Ω –∞–¥—Ä–µ—Å', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', icon: 'üìç' },
            { action: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª', details: '–û–±–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', time: '3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', icon: 'üìù' }
          ],
          navigationCards: [
            { 
              title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', 
              icon: 'üë•', 
              description: '–°–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
              color: 'bg-blue-50 border-blue-200',
              iconBg: 'bg-blue-100',
              path: '/users' 
            },
            { 
              title: '–¢—É—Ä–Ω–∏—Ä—ã –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è', 
              icon: 'üèÜ', 
              description: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–≤, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
              color: 'bg-green-50 border-green-200',
              iconBg: 'bg-green-100',
              path: '/tournaments' 
            },
            { 
              title: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å–∏—Å—Ç–µ–º—ã', 
              icon: 'üîê', 
              description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ —É—á–µ—Ç–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤',
              color: 'bg-purple-50 border-purple-200',
              iconBg: 'bg-purple-100',
              path: '/admins' 
            },
            { 
              title: '–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', 
              icon: 'üìä', 
              description: '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ —Ä–∞–±–æ—Ç–µ —Å–∏—Å—Ç–µ–º—ã',
              color: 'bg-amber-50 border-amber-200',
              iconBg: 'bg-amber-100',
              path: '/reports' 
            }
          ]
        });
      }, 300);
    });
  }

  async getSystemActivity() {
    // This would be replaced with real chart data in a production app
    return {
      labels: ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å'],
      datasets: [
        {
          label: '–ü–æ—Å–µ—â–µ–Ω–∏—è',
          data: [420, 350, 500, 480, 560, 610]
        },
        {
          label: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
          data: [45, 38, 42, 37, 50, 48]
        }
      ]
    };
  }
}

export const dashboardService = new DashboardService(); 