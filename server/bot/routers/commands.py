import logging
import os
from pathlib import Path

from aiogram import Router
from aiogram.exceptions import TelegramNetworkError
from aiogram.filters import Command
from aiogram.types import (
    FSInputFile,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    Message,
)

router = Router()
logger = logging.getLogger(__name__)

# –ö–µ—à–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
VIDEO_PATH = Path(os.path.dirname(__file__)) / ".." / "assets" / "gopadel-hello.mp4"
WELCOME_TEXT = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GoPadel Miniapp!

–ü–∞–¥–µ–ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ª—é–¥–µ–π. 
–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –∏–≥—Ä—ã –∏ —Ç—É—Ä–Ω–∏—Ä—ã, –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –¥–ª—è –∏–≥—Ä—ã –∏ –¥—Ä—É–∑–µ–π, –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ —ç–Ω–µ—Ä–≥–∏—é —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ! 

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —Ç—É—Ä–Ω–∏—Ä–∞–º, –∑–∞–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –∏–≥—Ä–∞–π —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º! üéæ"""

APP_LINK = "https://t.me/gopadel_league_bot/app"


@router.message(Command("start"))
async def start_command(message: Message):
    try:
        welcome_video = FSInputFile(VIDEO_PATH)

        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º!", url=APP_LINK)]
            ]
        )

        await message.answer_video(
            video=welcome_video,
            caption=WELCOME_TEXT,
            reply_markup=keyboard,
        )
    except TelegramNetworkError as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ Telegram: {e}")
        try:
            keyboard = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º!", url=APP_LINK)]
                ]
            )
            await message.answer(
                text=WELCOME_TEXT,
                reply_markup=keyboard,
            )
        except Exception as text_err:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–∂–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text_err}")
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}")


@router.message()
async def handle_all_other_messages(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ /start)"""
    await message.answer("–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é")
